trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'
  demands:
    - Agent.Name -equals sensipro-agent

variables:
  dockerRegistryServiceConnection: 'sensiProACRConnection'
  imageRepository: 'course-service'
  containerRegistry: 'sensiproacr.azurecr.io'
  kubernetesServiceConnection: 'sensiProAKSConnection'
  imageTag: '$(Build.BuildId)'

steps:
- checkout: self

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'Azure subscription 1 (9724b718-7bc7-48cc-b41b-57dcd3cc158f)'
    KeyVaultName: 'SensiProLms-keyvault'
    SecretsFilter: '*'
    RunAsPreJob: true
  displayName: 'Fetch secrets from Azure Key Vault'

- task: Docker@2
  displayName: 'Build and push Course Service image'
  inputs:
    command: 'buildAndPush'
    repository: '$(imageRepository)'
    dockerfile: 'Dockerfile'
    containerRegistry: '$(dockerRegistryServiceConnection)'
    tags: |
      $(imageTag)
      latest

- script: |
    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b .
    ./trivy image --exit-code 1 --severity HIGH,CRITICAL $(containerRegistry)/$(imageRepository):$(imageTag)
  displayName: 'Scan Course Service image with Trivy'

- task: Kubernetes@1
  displayName: 'Deploy Course Service to AKS'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: '$(kubernetesServiceConnection)'
    command: 'apply'
    arguments: '-f k8s/course-service-deployment.yaml -f k8s/course-service-service.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    azureSubscriptionEndpoint: 'sensiPro-AKS-connection'
    azureContainerRegistry: '$(containerRegistry)'