trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'
  demands:
    - Agent.Name -equals sensipro-agent

variables:
  dockerRegistryServiceConnection: 'sensiProACRConnection'
  imageRepository: 'payment-service'
  containerRegistry: 'sensiproacr.azurecr.io'
  kubernetesServiceConnection: 'sensiProAKSConnection'
  imageTag: '$(Build.BuildId)'
  imagePullSecret: 'acr-secret'

steps:
- checkout: self

- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'Azure subscription 1 (9724b718-7bc7-48cc-b41b-57dcd3cc158f)'
    KeyVaultName: 'SensiProLms-keyvault'
    SecretsFilter: '*'
    RunAsPreJob: true
  displayName: 'Fetch secrets from Azure Key Vault'

- task: Docker@2
  displayName: 'Build and push Payment Service image'
  inputs:
    command: 'buildAndPush'
    repository: '$(imageRepository)'
    dockerfile: 'Dockerfile'
    containerRegistry: '$(dockerRegistryServiceConnection)'
    tags: |
      $(imageTag)
      latest

- script: |
    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b .
    ./trivy image --exit-code 1 --severity HIGH,CRITICAL $(containerRegistry)/$(imageRepository):$(imageTag)
  displayName: 'Scan Payment Service image with Trivy'

- task: KubernetesManifest@1
  displayName: 'Create imagePullSecret'
  inputs:
    action: 'createSecret'
    kubernetesServiceConnection: '$(kubernetesServiceConnection)'
    secretName: '$(imagePullSecret)'
    dockerRegistryEndpoint: '$(dockerRegistryServiceConnection)'

- task: KubernetesManifest@1
  displayName: 'Deploy to AKS'
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: '$(kubernetesServiceConnection)'
    namespace: 'lms-payment'
    manifests: |
      k8s/payment-service-deployment.yaml
      k8s/payment-service-service.yaml
    containers: '$(containerRegistry)/$(imageRepository):$(imageTag)'
    imagePullSecrets: '$(imagePullSecret)'