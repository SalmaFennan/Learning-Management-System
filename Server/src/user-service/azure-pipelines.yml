trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: 'sensiProACRConnection'
  imageRepository: 'user-service'
  containerRegistry: 'mylmsregistry.azurecr.io'
  kubernetesServiceConnection: 'sensiProAKSConnection'
  imageTag: '$(Build.BuildId)'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
  displayName: 'Use Python 3.x'

- script: |
    pip install trivy
    trivy image --exit-code 1 --severity HIGH,CRITICAL $(containerRegistry)/$(imageRepository):$(imageTag)
  displayName: 'Scan User Service image with Trivy'
  condition: succeeded()

- task: Docker@2
  displayName: 'Build and push Docker image'
  inputs:
    containerRegistry: '$(dockerRegistryServiceConnection)'
    repository: '$(imageRepository)'
    command: 'buildAndPush'
    Dockerfile: 'Dockerfile'
    tags: |
      $(imageTag)
      latest

- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: '$(kubernetesServiceConnection)'
    command: 'apply'
    arguments: '-f k8s/user-service-deployment.yaml -f k8s/user-service-service.yaml'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'
    azureSubscriptionEndpoint: '$(dockerRegistryServiceConnection)'
    azureContainerRegistry: '$(containerRegistry)'