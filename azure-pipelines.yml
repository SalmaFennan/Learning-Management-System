trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'
  demands:
    - Agent.Name -equals sensipro-agent

variables:
  - group: lms-secrets   # <-- tes secrets de la Library
  - name: dockerRegistryServiceConnection
    value: 'sensiProACRConnection'
  - name: kubernetesServiceConnection
    value: 'sensiProAKSConnection'
  - name: containerRegistry
    value: 'sensiproacr.azurecr.io'
  - name: imageTag
    value: '$(Build.BuildId)'

steps:
- checkout: self

# Connexion à ACR
- task: Docker@2
  displayName: 'Login to ACR'
  inputs:
    command: 'login'
    containerRegistry: '$(dockerRegistryServiceConnection)'

# Build & push des microservices (PowerShell au lieu de Bash)
- powershell: |
    $services = @("api-gateway", "auth-service", "user-service", "payment-service", "course-service", "Client")

    foreach ($dir in $services) {
      Write-Host "=== Building and pushing $dir image ==="
      docker build -t $(containerRegistry)/$dir:$(imageTag) -t $(containerRegistry)/$dir:latest $dir
      docker push $(containerRegistry)/$dir:$(imageTag)
      docker push $(containerRegistry)/$dir:latest
    }
  displayName: 'Build and push all microservices'

# Scan des images avec Trivy (PowerShell)
- powershell: |
    Invoke-WebRequest -Uri "https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.ps1" -OutFile "install.ps1"
    .\install.ps1 -BinDir "."

    $services = @("api-gateway", "auth-service", "user-service", "payment-service", "course-service", "Client")

    foreach ($dir in $services) {
      Write-Host "=== Scanning $dir image with Trivy ==="
      ./trivy.exe image --exit-code 1 --severity HIGH,CRITICAL $(containerRegistry)/$dir:$(imageTag)
    }
  displayName: 'Install and scan all images with Trivy'

# Déploiement sur AKS
- task: Kubernetes@1
  displayName: 'Deploy all microservices to AKS'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceConnection: '$(kubernetesServiceConnection)'
    command: 'apply'
    arguments: |
      -n lms-gateway -f k8s/api-gateway-deployment.yaml -f k8s/api-gateway-service.yaml
      -n lms-auth -f k8s/auth-service-deployment.yaml -f k8s/auth-service-service.yaml
      -n lms-course -f k8s/course-service-deployment.yaml -f k8s/course-service-service.yaml
      -n lms-payment -f k8s/payment-service-deployment.yaml -f k8s/payment-service-service.yaml
      -n lms-user -f k8s/user-service-deployment.yaml -f k8s/user-service-service.yaml
      -n lms-frontend -f k8s/frontend-deployment.yaml -f k8s/frontend-service.yaml
