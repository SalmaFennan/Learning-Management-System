trigger:
  branches:
    include:
      - main

pool:
  name: 'Default'
  demands:
    - Agent.Name -equals agent-sensipro

variables:
  - group: lms-secrets
  - name: dockerRegistryServiceConnection
    value: sensiProACRConnection
  - name: azureSubscription
    value: 'Azure subscription 1'
  - name: containerRegistry
    value: sensiproacr.azurecr.io
  - name: imageTag
    value: $(Build.BuildId)

stages:
  - stage: Build
    jobs:
      - job: Build
        steps:
          - task: Docker@2
            displayName: Build and Push Auth Service
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: auth
              command: buildAndPush
              Dockerfile: auth/Dockerfile
              tags: |
                $(imageTag)

          - task: Docker@2
            displayName: Build and Push User Service
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: user
              command: buildAndPush
              Dockerfile: user/Dockerfile
              tags: |
                $(imageTag)

          - task: Docker@2
            displayName: Build and Push Payment Service
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: payment
              command: buildAndPush
              Dockerfile: payment/Dockerfile
              tags: |
                $(imageTag)

          - task: Docker@2
            displayName: Build and Push Course Service
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: course
              command: buildAndPush
              Dockerfile: course/Dockerfile
              tags: |
                $(imageTag)

          - task: Docker@2
            displayName: Build and Push API Gateway Service
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              repository: api-gateway
              command: buildAndPush
              Dockerfile: api-gateway/Dockerfile
              tags: |
                $(imageTag)

  - stage: Scan
    jobs:
      - job: TrivyScan
        steps:
          - script: |
              curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
              ./trivy image $(containerRegistry)/auth:$(imageTag)
              ./trivy image $(containerRegistry)/user:$(imageTag)
              ./trivy image $(containerRegistry)/payment:$(imageTag)
              ./trivy image $(containerRegistry)/course:$(imageTag)
              ./trivy image $(containerRegistry)/api-gateway:$(imageTag)
            displayName: Trivy Scan

  - stage: Deploy
    jobs:
      - job: Deploy
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az aks get-credentials --resource-group SensiPro-rg --name sensiProAksCluster --overwrite-existing
                kubectl apply -f k8s/
            displayName: 'Deploy to AKS'